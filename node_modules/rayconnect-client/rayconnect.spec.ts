import { emit } from 'cluster';
import Rayconnect from './rayconnect';
import SimpleConnect from './simple';
import { assert, expect } from 'chai';
import 'mocha';
let rayconnect: any
describe('guest function', () => {

      beforeEach(()=>{
        rayconnect =  new Rayconnect({
            scopes: "chat,project,admin",
            appID: "rayGap",
            space: "main",
            type: "client"
        }, undefined, true)
    }) 
     it('should return guest', (done) => {
        

        rayconnect.GetGuestAccess().then((data: any) => {
            
            assert(data.uid == 'guest')

            done()

            

        })


    });
    

    /* it('test simple connect', (done) => {

        const io = new SimpleConnect("wss://server-test.rayconnect.ir/socket.io/?scopes=chat&appID=rayGap&space=chat&type=client&encode=true&EIO=3&transport=websocket")
        io.emit('auth', {

            token: "chatAdmin25d07XlX.1352.7811.3212pepper"
        })
        io.on('connect', (socket:any) => {

            console.log("hi")
                
                socket.on('authed', (data:any) => {
                    done()
                })
            

        })



    });
    */
    
    after(function () {
         // rayconnect.socket.close()
    });


});